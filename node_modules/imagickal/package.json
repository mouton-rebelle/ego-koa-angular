{
  "name": "imagickal",
  "version": "0.4.1",
  "description": "Promised based wrapper for ImageMagick commands.",
  "main": "index.js",
  "scripts": {
    "test": "jshint test/ lib/ index.js && ./node_modules/.bin/mocha test/*.test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/martinj/node-imagickal",
    "homepage": "http://github.com/martinj/node-imagickal"
  },
  "keywords": [
    "image",
    "imagick",
    "imagemagick",
    "image-magick"
  ],
  "author": {
    "name": "Martin Jonsson",
    "email": "martin.jonsson@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/martinj/node-imagickal/issues"
  },
  "dependencies": {
    "debug": "~0.7.2",
    "bluebird": "~1.0.1"
  },
  "devDependencies": {
    "mocha": "~1.12.1",
    "jshint": "~2.1.10",
    "should": "~1.2.2"
  },
  "readme": "# node-imagickal\n\nnode wrapper for ImageMagick commands\n\n[![Build Status](https://secure.travis-ci.org/martinj/node-imagickal.png)](http://travis-ci.org/martinj/node-imagickal)\n\n## Installation\n\n\tnpm install imagickal\n\n## Examples\n\n\tvar im = require('imagickal');\n\n\t//get image dimensions\n\tim.dimensions('image.jpg').then(function (dim) {\n\t\tconsole.log(dim.width);\n\t\tconsole.log(dim.height);\n\t});\n\n\t//get image dimensions and type\n\tim.identify('image.jpg').then(function (data) {\n\t\tconsole.log(data);\n\t});\n\n\t//Don't like using promises, use regular node style callbacks for all functions that returns promises.\n\tim.identify('image.jpg', function (err, data) {\n\t\tconsole.log(data);\n\t});\n\n\t//transform image with action object,\n\t//actions is applied in the same order as they are recevied\n\tvar actions =  {\n\t\tresize: { width: 100 },\n\t\tcrop: { width: 10, height: 10, x: 10, y: 10 },\n\t\tquality: 90,\n\t\tstrip: true\n\t};\n\n\tim.transform('src.jpg', 'dst.jpg', actions).then(function () {\n\t\tconsole.log('Done')\n\t});\n\n\t//transform image with command object\n\tim.commands()\n\t\t.resize({ width: 100 })\n\t\t.crop({ width: 10, height: 10, x: 10, y: 10 })\n\t\t.quality(90)\n\t\t.strip()\n\t\t.exec('src.jpg', 'dst.jpg').then(function () {\n\t\t\tconsole.log('done');\n\t\t});\n\n## Available image actions / commands\n\n- rotate Rotate image, properties { angle: 0, x: 0, y: 0 }\n- crop - Crop image, properties { width: 2560, height: 1013, x: 0, y: 0 }\n- resize - Resize image, properties { width: 470, height: 186 }\n- sharpen - Sharepn image, properties { mode: 'variable' }, available modes are: light, moderate, strong, extreme, off.\n- strip - Strip image of all profiles and comments.\n- quality - Compression quality, defaults to 85.\n\n## Run Tests\n\n\tnpm test\n\n## Enable debugging output\n\nSet DEBUG environment variable to imagickal\n\n\tDEBUG=imagickal node ./app.js\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/martinj/node-imagickal",
  "_id": "imagickal@0.4.1",
  "dist": {
    "shasum": "9c9e04fbc8fed38038346561778d2f8a0ec580e7"
  },
  "_from": "imagickal@",
  "_resolved": "https://registry.npmjs.org/imagickal/-/imagickal-0.4.1.tgz"
}
